apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-rust-server
  name: generator-rust-server
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: generator-rust-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: generator-rust-server
    spec:
      containers:
      - env:
	      {{ if .Values.ssl.enabled }}
	      - name: ENABLE_SERVER_SSL
		    value: "true"
		  - name: CERT_PATH
		    value: /etc/tls/server_cert.pem
		  - name: KEY_PATH
		    value: /etc/tls/server_key.pem
		  {{- end }}
      - image: {{ .Values.image }}:{{ .Values.tag }}
        imagePullPolicy: Always
        name: generator-server
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
		volumeMounts:
		- name: tls-cert
		  mountPath: "/etc/tls"
		  readOnly: true
		- name: tls-key
		  mountPath: "/etc/tls"
		  readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
	  volumes: 
	    - name: tls-cert
		  secret:
		    secretName: {{ .Values.ssl.certificate.secret | quote }}
		    optional: false 
	    - name: tls-key
		  secret:
		    secretName: {{ .Values.ssl.key.secret | quote }}
		    optional: false 