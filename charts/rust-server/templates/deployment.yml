apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: generator-rust-server
  name: generator-rust-server
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: generator-rust-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: generator-rust-server
    spec:
      containers:
      - image: {{ .Values.image }}:{{ .Values.tag }}
        imagePullPolicy: Always
        name: generator-server
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        
        {{- if .Values.ssl.enabled }}
        env:
        - name: ENABLE_SERVER_SSL
          value: "true"
        - name: CERT_PATH
          value: /files/tls.crt
        - name: KEY_PATH
          value: /files/tls.key
        volumeMounts:
        - name: tls-cert-key
          mountPath: "/files"
          readOnly: true
        {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      {{- if .Values.ssl.enabled }}
      volumes: 
        - name: tls-cert-key
          secret:
            secretName: {{ .Values.ssl.secret | quote }}
            optional: false 
      {{- end }}
    